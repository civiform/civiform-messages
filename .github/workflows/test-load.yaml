name: Sync New Keys to Translations
# Trigger the workflow on pushes to main that modify the base messages file,
# and allow for manual dispatch.
on:
  workflow_dispatch:
  push:
    branches: [main, annazhang-sync-translations]
jobs:
  sync-messages:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Needed to commit and push changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Use default token for internal repo actions

      - name: Setup Git User and Environment
        run: |
          git config user.name "civiform-github-automation"
          git config user.email "civiform-dev@exygy.com"
          echo "BRANCH_NAME=sync-i18n/$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      - name: Sync Keys to Language Files
        id: sync
        run: |
          set -e
          MESSAGES_FILE="server/conf/i18n/messages"
          # Find all language files (messages.fr, messages.am, etc.) but exclude the base messages file.
          LANGUAGE_FILES=$(find server/conf/i18n -name 'messages.*' -type f | grep -v "${MESSAGES_FILE}$")
          
          if [ -z "$LANGUAGE_FILES" ]; then
            echo "No language files (messages.<lang>) found. Skipping sync."
            echo "changes_made=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Function to extract keys from a messages file, ignoring comments and empty lines
          extract_keys() {
            grep -v '^\s*#\|^$' "$1" | tr -d '\r' | awk -F'=' '{print $1}' | sed 's/\s*$//'
          }

          BASE_KEYS=$(extract_keys "${MESSAGES_FILE}")
          CHANGES=0

          for LANG_FILE in $LANGUAGE_FILES; do
            echo "Processing ${LANG_FILE}..."
            LANG_KEYS=$(extract_keys "${LANG_FILE}")
            
            # Find keys in base file that are NOT in language file
            NEW_KEYS=$(comm -23 <(echo "$BASE_KEYS" | sort) <(echo "$LANG_KEYS" | sort))

            if [ -z "$NEW_KEYS" ]; then
              echo "No new keys found for ${LANG_FILE}."
            else
              echo "New keys found for ${LANG_FILE}."
              
              # Append new keys with an empty value to the language file
              echo "" >> "${LANG_FILE}"
              echo "##################################################" >> "${LANG_FILE}"
              echo "# Keys automatically added from base messages file" >> "${LANG_FILE}"
              echo "##################################################" >> "${LANG_FILE}"
              # Append 'key=' for the empty translation, preserving the key's position
              echo "$NEW_KEYS" | sed 's/$/=/' >> "${LANG_FILE}"
              
              CHANGES=$((CHANGES + 1))
            fi
          done

          if [ $CHANGES -gt 0 ]; then
            echo "Total files updated: ${CHANGES}"
            echo "changes_made=true" >> $GITHUB_OUTPUT
          else
            echo "No changes needed for any language file."
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi
        # The script uses process substitution (<()), which requires bash.
        shell: bash

      - name: Commit and Push Changes
        if: steps.sync.outputs.changes_made == 'true'
        run: |
          # Create a new branch for the changes
          git checkout -b ${{ env.BRANCH_NAME }}
          
          # Add all changed messages.* files
          git add server/conf/i18n/messages.*
          
          git commit -m "chore(i18n): Sync new keys from messages to messages.<lang> files"
          
          # Push the new branch to the remote
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        if: steps.sync.outputs.changes_made == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_BODY="This PR was automatically created by the 'Sync New Keys to Translations' workflow to ensure all translation files (e.g., \`messages.fr\`, \`messages.am\`) contain the new keys added to the base \`messages\` file.

          Crucially, only the new keys are added with an empty value (e.g., \`new.key.name=\`). Existing translations are preserved.
          Please review the added empty keys and ensure they are ready for translation."
          
          PR_URL=$(gh pr create \
            --head ${{ env.BRANCH_NAME }} \
            --base main \
            --label "i18n" \
            --title "chore(i18n): Sync new keys to translation files" \
            --body "$PR_BODY")
            
          echo "Created PR at ${PR_URL}"