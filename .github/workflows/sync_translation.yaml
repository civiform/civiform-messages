name: Sync New Keys to Translations
# Trigger the workflow on pushes to main that modify the base messages file,
# and allow for manual dispatch.
# test test
on:
  workflow_dispatch:
  push:
    branches: [main,annazhang-sync-value]

jobs:
  sync-messages:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write # Required to create the PR

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git User and Environment
        run: |
          git config user.name "civiform-github-automation"
          git config user.email "civiform-dev@exygy.com"
          echo "BRANCH_NAME=sync-i18n/$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      - name: Sync Keys and Values to Language Files
        id: sync
        run: |
          # Use set -e for general failure detection
          set -e
          MESSAGES_FILE="server/conf/i18n/messages"
          
          # Function to extract, clean, and isolate keys (reads from STDIN)
          extract_keys() {
            # 1. Remove BOM if present (often invisible, but breaks matching)
            # 2. Remove comment lines and blank lines
            # 3. Use awk to isolate the key (field 1, split by '=')
            # 4. Use tr to delete common invisible characters like non-breaking spaces (\u00A0)
            # 5. Use sed to trim ALL leading and trailing whitespace.
            tr -d '\xEF\xBB\xBF' | \
            grep -E -v '^\s*#|^$' | \
            awk -F'=' '{print $1}' | \
            tr -d '\xC2\xA0\x09' | \
            sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
          }

          # Find all language files (messages.fr, messages.am, etc.) but exclude the base messages file and messages.en-US file.
          LANGUAGE_FILES=$(find server/conf/i18n -name 'messages.*' -type f | \
                           grep -v "${MESSAGES_FILE}$" | \
                           grep -v "messages.en-US$")

          if [ -z "$LANGUAGE_FILES" ]; then
            echo "No language files (messages.<lang>) found. Skipping sync."
            echo "changes_made=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Store the content of the base messages file for later lookup
          MESSAGES_CONTENT=$(cat "${MESSAGES_FILE}")
          
          # Read base keys by piping the file content to the function
          BASE_KEYS=$(cat "${MESSAGES_FILE}" | extract_keys)
          CHANGES=0

          for LANG_FILE in $LANGUAGE_FILES; do
            echo "Processing ${LANG_FILE}..."
            
            # Extract keys from the language file by piping content
            LANG_KEYS=$(cat "${LANG_FILE}" | extract_keys)
            
            # Find keys in base file that are NOT in language file
            # Note: Process substitution is a bash feature, which you've specified with shell: bash.
            NEW_KEYS=$(comm -23 <(echo "$BASE_KEYS" | sort) <(echo "$LANG_KEYS" | sort))

            if [ -z "$NEW_KEYS" ]; then
              echo "No new keys found for ${LANG_FILE}."
            else
              echo "New keys found for ${LANG_FILE}. Appending with values..."
              
              # Loop through each new key and find its corresponding line in the base file
              while read -r NEW_KEY; do
                # Use grep with -F (fixed string) to safely find the full line in the base messages file
                NEW_LINE=$(echo "$MESSAGES_CONTENT" | grep -F -m 1 "^${NEW_KEY}=")
                
                # Append the new key-value pair to the language file
                if [ -n "$NEW_LINE" ]; then
                  echo "${NEW_LINE}" >> "${LANG_FILE}"
                fi
              done <<< "$NEW_KEYS"
              
              CHANGES=$((CHANGES + 1))
            fi
          done

          if [ $CHANGES -gt 0 ]; then
            echo "Total files updated: ${CHANGES}"
            echo "changes_made=true" >> $GITHUB_OUTPUT
          else
            echo "No changes needed for any language file."
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Commit and Push Changes
        if: steps.sync.outputs.changes_made == 'true'
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}
          git add server/conf/i18n/messages.*
          git commit -m "chore(i18n): Sync new keys and values from messages to messages.<lang> files"
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        if: steps.sync.outputs.changes_made == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_BODY="This PR was automatically created by the 'Sync New Keys to Translations' workflow to ensure all translation files contain the new keys and their values added to the base \`messages\` file.

          The new values from the base file are a starting point for translators. Please review the added entries and update the translations as needed."
          
          PR_URL=$(gh pr create \
            --head ${{ env.BRANCH_NAME }} \
            --base main \
            --title "chore(i18n): Sync new keys and values to translation files" \
            --body "$PR_BODY")
            
          echo "Created PR at ${PR_URL}"
